[{"name": "sheet1", "metadata": {"smart_notebook": {"version": 1, "computation_mode": "", "package_manager": "", "base_environment": "", "packages": [], "kernelspec": {"display_name": "Python 3 (ipykernel)", "language": "python", "name": "python3"}}}, "nbformat": 4, "nbformat_minor": 4, "cells": [{"cell_type": "code", "source": ["import json\nimport urllib.request\n\n__MODULE_NAME__ = \"test2\"\n\ndef getBody(request,requestHandler) -> 'HTTP':\n    params = json.loads(request.body)\n    dict = {\"\u4e0a\u6d77\":\"101020100\",\"\u5317\u4eac\":\"101010100\"}\n    r = urllib.request.urlopen('http://www.weather.com.cn/data/sk/'+dict.get(params.get(\"city\"))+'.html')\n    requestHandler.write(r.read().decode())\n\n"], "execution_count": 1, "execution_state": "idle", "outputs": [], "metadata": {"smart_notebook": {"type": "code", "cell_id": "3aeaae5d19dd4143eb195c11bf36efc8", "hide_input_from_viewers": false, "hide_output_from_viewers": false, "execution_start": 1657258845448, "execution_millis": 72, "source": ["import json\nimport urllib.request\n\n__MODULE_NAME__ = \"test2\"\n\ndef getBody(request,requestHandler) -> 'HTTP':\n    params = json.loads(request.body)\n    dict = {\"\u4e0a\u6d77\":\"101020100\",\"\u5317\u4eac\":\"101010100\"}\n    r = urllib.request.urlopen('http://www.weather.com.cn/data/sk/'+dict.get(params.get(\"city\"))+'.html')\n    requestHandler.write(r.read().decode())\n\n"]}}}, {"cell_type": "code", "source": ["\nimport inspect\n\ndef exec_func(fun_p,req_obj):\n  p_fun=inspect.getfullargspec(fun_p)\n  re_list=[]\n  newList = list(reversed(p_fun.args))\n  defaults_v=p.defaults\n  for x in p_fun.args:\n    x_type=p.annotations[x]\n    r_index=newList.index(x)\n    is_defult=False\n    default_v=None\n    if r_index<len(defaults_v):\n      is_defult=True\n      default_v=defaults_v[r_index]\n    #print(x_type==int,is_defult,default_v)\n    if x in req_obj or is_defult==True:\n      if x in req_obj:\n        val=req_obj[x]\n      else:\n        val=default_v\n      if x_type==str:\n        if is_defult:\n          re_list.append(\"%s='%s'\"%(x,val))\n        else:\n          re_list.append(\"'%s'\"%val)\n      else:\n        if is_defult :\n          re_list.append(\"%s=%s\"%(x,val))\n        else:\n          re_list.append(\"%s\"%val)\n    else:\n      raise  Exception('\u53c2\u6570\u4e0d\u5168')\n  fun_str=\"%s(%s)\"%(fun_p.__name__,','.join(re_list) )\n  print(fun_str)\n  re_val=eval(fun_str)\n  return re_val"], "execution_count": 90, "execution_state": "idle", "outputs": [], "metadata": {"smart_notebook": {"type": "code", "cell_id": "dd4b50d43d6d534a4a38dba33b845fd4", "hide_input_from_viewers": false, "hide_output_from_viewers": false, "execution_start": 0, "execution_millis": 91, "source": ["\nimport inspect\n\ndef exec_func(fun_p,req_obj):\n  p_fun=inspect.getfullargspec(fun_p)\n  re_list=[]\n  newList = list(reversed(p_fun.args))\n  defaults_v=p.defaults\n  for x in p_fun.args:\n    x_type=p.annotations[x]\n    r_index=newList.index(x)\n    is_defult=False\n    default_v=None\n    if r_index<len(defaults_v):\n      is_defult=True\n      default_v=defaults_v[r_index]\n    #print(x_type==int,is_defult,default_v)\n    if x in req_obj or is_defult==True:\n      if x in req_obj:\n        val=req_obj[x]\n      else:\n        val=default_v\n      if x_type==str:\n        if is_defult:\n          re_list.append(\"%s='%s'\"%(x,val))\n        else:\n          re_list.append(\"'%s'\"%val)\n      else:\n        if is_defult :\n          re_list.append(\"%s=%s\"%(x,val))\n        else:\n          re_list.append(\"%s\"%val)\n    else:\n      raise  Exception('\u53c2\u6570\u4e0d\u5168')\n  fun_str=\"%s(%s)\"%(fun_p.__name__,','.join(re_list) )\n  print(fun_str)\n  re_val=eval(fun_str)\n  return re_val"]}}}, {"cell_type": "code", "source": ["def add(x:int,y:int,z:int=1):\n  return (x+y)*z*2\nreq_obj={\"x\":10,\"y\":20}\nre=exec_func(add,req_obj)\nprint(re)"], "execution_count": 92, "execution_state": "idle", "outputs": [{"output_type": "stream", "name": "stdout", "text": ["add(10,20,z=1)\n60\n"]}], "metadata": {"smart_notebook": {"type": "code", "cell_id": "e509b92295ddf9401a9b2339c1e59bb7", "hide_input_from_viewers": false, "hide_output_from_viewers": false, "execution_start": 0, "execution_millis": 85, "source": ["def add(x:int,y:int,z:int=1):\n  return (x+y)*z*2\nreq_obj={\"x\":10,\"y\":20}\nre=exec_func(add,req_obj)\nprint(re)"]}}}, {"cell_type": "code", "source": ["req_obj={\"x\":10}\nre=exec_func(add,req_obj)\nprint(re)"], "execution_count": 91, "execution_state": "idle", "outputs": [{"output_type": "stream", "name": "errMsg", "text": ["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m", "\u001b[0;31mException\u001b[0m                                 Traceback (most recent call last)", "Cell \u001b[0;32mIn[91], line 2\u001b[0m\n\u001b[1;32m      1\u001b[0m req_obj\u001b[38;5;241m=\u001b[39m{\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mx\u001b[39m\u001b[38;5;124m\"\u001b[39m:\u001b[38;5;241m10\u001b[39m}\n\u001b[0;32m----> 2\u001b[0m re\u001b[38;5;241m=\u001b[39m\u001b[43mexec_func\u001b[49m\u001b[43m(\u001b[49m\u001b[43madd\u001b[49m\u001b[43m,\u001b[49m\u001b[43mreq_obj\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m      3\u001b[0m \u001b[38;5;28mprint\u001b[39m(re)\n", "Cell \u001b[0;32mIn[90], line 33\u001b[0m, in \u001b[0;36mexec_func\u001b[0;34m(fun_p, req_obj)\u001b[0m\n\u001b[1;32m     31\u001b[0m         re_list\u001b[38;5;241m.\u001b[39mappend(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;132;01m%s\u001b[39;00m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;241m%\u001b[39mval)\n\u001b[1;32m     32\u001b[0m   \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m---> 33\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m  \u001b[38;5;167;01mException\u001b[39;00m(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m\u53c2\u6570\u4e0d\u5168\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[1;32m     34\u001b[0m fun_str\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;132;01m%s\u001b[39;00m\u001b[38;5;124m(\u001b[39m\u001b[38;5;132;01m%s\u001b[39;00m\u001b[38;5;124m)\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;241m%\u001b[39m(fun_p\u001b[38;5;241m.\u001b[39m\u001b[38;5;18m__name__\u001b[39m,\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m,\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;241m.\u001b[39mjoin(re_list) )\n\u001b[1;32m     35\u001b[0m \u001b[38;5;28mprint\u001b[39m(fun_str)\n", "\u001b[0;31mException\u001b[0m: \u53c2\u6570\u4e0d\u5168"]}], "metadata": {"smart_notebook": {"type": "code", "cell_id": "aeb4ceaee352be49e8e92b8ea502d9db", "hide_input_from_viewers": false, "hide_output_from_viewers": false, "execution_start": 0, "execution_millis": 122, "source": ["req_obj={\"x\":10}\nre=exec_func(add,req_obj)\nprint(re)"]}}}, {"cell_type": "code", "source": ["p=inspect.getfullargspec(add)\nprint(add.__name__)\nprint(p.args)\nprint(len(p.defaults))\nprint(p.annotations)\nnewList = list(reversed(p_fun.args))\nprint(newList.index('z'))"], "execution_count": 64, "execution_state": "idle", "outputs": [{"output_type": "stream", "name": "stdout", "text": ["add\n['x', 'y', 'z']\n1\n{'x': <class 'int'>, 'y': <class 'int'>, 'z': <class 'int'>}\n0\n"]}], "metadata": {"smart_notebook": {"type": "code", "cell_id": "4a81cb12e6b7fe42aae99ede50923d6d", "hide_input_from_viewers": false, "hide_output_from_viewers": false, "execution_start": 0, "execution_millis": 63, "source": ["p=inspect.getfullargspec(add)\nprint(add.__name__)\nprint(p.args)\nprint(len(p.defaults))\nprint(p.annotations)\nnewList = list(reversed(p_fun.args))\nprint(newList.index('z'))"]}}}], "inputVisible": false}]