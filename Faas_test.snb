[{"name": "sheet1", "metadata": {"smart_notebook": {"version": 1, "computation_mode": "", "package_manager": "", "base_environment": "", "packages": [], "kernelspec": {"display_name": "Python 3 (ipykernel)", "language": "python", "name": "python3"}}}, "nbformat": 4, "nbformat_minor": 4, "cells": [{"cell_type": "code", "source": ["import json\nimport urllib.request\n\n__MODULE_NAME__ = \"test2\"\n\ndef getBody(request,requestHandler) -> 'HTTP':\n    params = json.loads(request.body)\n    dict = {\"\u4e0a\u6d77\":\"101020100\",\"\u5317\u4eac\":\"101010100\"}\n    r = urllib.request.urlopen('http://www.weather.com.cn/data/sk/'+dict.get(params.get(\"city\"))+'.html')\n    requestHandler.write(r.read().decode())\n\n"], "execution_count": 1, "execution_state": "idle", "outputs": [], "metadata": {"smart_notebook": {"type": "code", "cell_id": "3aeaae5d19dd4143eb195c11bf36efc8", "hide_input_from_viewers": false, "hide_output_from_viewers": false, "execution_start": 1657258845448, "execution_millis": 72, "source": ["import json\nimport urllib.request\n\n__MODULE_NAME__ = \"test2\"\n\ndef getBody(request,requestHandler) -> 'HTTP':\n    params = json.loads(request.body)\n    dict = {\"\u4e0a\u6d77\":\"101020100\",\"\u5317\u4eac\":\"101010100\"}\n    r = urllib.request.urlopen('http://www.weather.com.cn/data/sk/'+dict.get(params.get(\"city\"))+'.html')\n    requestHandler.write(r.read().decode())\n\n"]}}}, {"cell_type": "code", "source": ["\nimport inspect\n\ndef exec_func(fun_p,req_obj):\n  p_fun=inspect.getfullargspec(fun_p)\n  args_list=p_fun.args\n  re_list=[]\n  defaults_v=p_fun.defaults\n  for x in p_fun.args:\n    x_type=p_fun.annotations.get(x,str)\n    r_index=args_list.index(x)\n    is_defult=False\n    default_v=None\n    if r_index>=len(args_list)-len(defaults_v):\n      is_defult=True\n      default_v=defaults_v[r_index-len(args_list)+len(defaults_v)]\n    #print(x_type==int,is_defult,default_v,x_type)\n    if x in req_obj or is_defult==True:\n      if x in req_obj:\n        val=req_obj[x]\n      else:\n        val=default_v\n      print(x_type)\n      if x_type==str:\n        if is_defult:\n          re_list.append(\"%s='%s'\"%(x,val))\n        else:\n          re_list.append(\"'%s'\"%val)\n      else:\n        if is_defult :\n          re_list.append(\"%s=%s\"%(x,val))\n        else:\n          re_list.append(\"%s\"%val)\n    else:\n      raise  Exception('\u53c2\u6570\u4e0d\u5168')\n  print(re_list)\n  fun_str=\"%s(%s)\"%(fun_p.__name__,','.join(re_list) )\n  print(fun_str)\n  re_val=eval(fun_str)\n  return re_val"], "execution_count": 137, "execution_state": "idle", "outputs": [], "metadata": {"smart_notebook": {"type": "code", "cell_id": "dd4b50d43d6d534a4a38dba33b845fd4", "hide_input_from_viewers": false, "hide_output_from_viewers": false, "execution_start": 0, "execution_millis": 142, "source": ["\nimport inspect\n\ndef exec_func(fun_p,req_obj):\n  p_fun=inspect.getfullargspec(fun_p)\n  args_list=p_fun.args\n  re_list=[]\n  defaults_v=p_fun.defaults\n  for x in p_fun.args:\n    x_type=p_fun.annotations.get(x,str)\n    r_index=args_list.index(x)\n    is_defult=False\n    default_v=None\n    if r_index>=len(args_list)-len(defaults_v):\n      is_defult=True\n      default_v=defaults_v[r_index-len(args_list)+len(defaults_v)]\n    #print(x_type==int,is_defult,default_v,x_type)\n    if x in req_obj or is_defult==True:\n      if x in req_obj:\n        val=req_obj[x]\n      else:\n        val=default_v\n      print(x_type)\n      if x_type==str:\n        if is_defult:\n          re_list.append(\"%s='%s'\"%(x,val))\n        else:\n          re_list.append(\"'%s'\"%val)\n      else:\n        if is_defult :\n          re_list.append(\"%s=%s\"%(x,val))\n        else:\n          re_list.append(\"%s\"%val)\n    else:\n      raise  Exception('\u53c2\u6570\u4e0d\u5168')\n  print(re_list)\n  fun_str=\"%s(%s)\"%(fun_p.__name__,','.join(re_list) )\n  print(fun_str)\n  re_val=eval(fun_str)\n  return re_val"]}}}, {"cell_type": "code", "source": ["def add(x:int,y:int,z:int=1):\n  return (x+y)*z*2\nreq_obj={\"x\":10,\"y\":20,\"z\":2}\nre=exec_func(add,req_obj)\nprint(re)"], "execution_count": 108, "execution_state": "idle", "outputs": [{"output_type": "stream", "name": "stdout", "text": ["True False None <class 'int'>\n<class 'int'>\nTrue False None <class 'int'>\n<class 'int'>\nTrue True 1 <class 'int'>\n<class 'int'>\nadd(10,20,z=2)\n120\n"]}], "metadata": {"smart_notebook": {"type": "code", "cell_id": "e509b92295ddf9401a9b2339c1e59bb7", "hide_input_from_viewers": false, "hide_output_from_viewers": false, "execution_start": 0, "execution_millis": 77, "source": ["def add(x:int,y:int,z:int=1):\n  return (x+y)*z*2\nreq_obj={\"x\":10,\"y\":20,\"z\":2}\nre=exec_func(add,req_obj)\nprint(re)"]}}}, {"cell_type": "code", "source": ["def Test(x:int,y:int,p,z:str=\"string\",w:int=111):\n  return (x+y),z,w\nreq_obj={\"x\":10,\"y\":20,'p':222}\np_fun=inspect.getfullargspec(Test)\nprint(p_fun)\nre=exec_func(Test,req_obj)\nprint(re)"], "execution_count": 139, "execution_state": "idle", "outputs": [{"output_type": "stream", "name": "stdout", "text": ["FullArgSpec(args=['x', 'y', 'p', 'z', 'w'], varargs=None, varkw=None, defaults=('string', 111), kwonlyargs=[], kwonlydefaults=None, annotations={'x': <class 'int'>, 'y': <class 'int'>, 'z': <class 'str'>, 'w': <class 'int'>})\n<class 'int'>\n<class 'int'>\n<class 'str'>\n<class 'str'>\n<class 'int'>\n['10', '20', \"'222'\", \"z='string'\", 'w=111']\nTest(10,20,'222',z='string',w=111)\n(30, 'string', 111)\n"]}], "metadata": {"smart_notebook": {"type": "code", "cell_id": "07932357e38bde403ae8959e15e65f23", "hide_input_from_viewers": false, "hide_output_from_viewers": false, "execution_start": 0, "execution_millis": 267, "source": ["def Test(x:int,y:int,p,z:str=\"string\",w:int=111):\n  return (x+y),z,w\nreq_obj={\"x\":10,\"y\":20,'p':222}\np_fun=inspect.getfullargspec(Test)\nprint(p_fun)\nre=exec_func(Test,req_obj)\nprint(re)"]}}}, {"cell_type": "code", "source": ["Test(10,20,z='string',w='111')"], "execution_count": 133, "execution_state": "idle", "outputs": [{"output_type": "execute_result", "metadata": {}, "data": {"text/plain": "(30, 'string', '111')"}}], "metadata": {"smart_notebook": {"type": "code", "cell_id": "aeb4ceaee352be49e8e92b8ea502d9db", "hide_input_from_viewers": false, "hide_output_from_viewers": false, "execution_start": 0, "execution_millis": 87, "source": ["Test(10,20,z='string',w='111')"]}}}, {"cell_type": "code", "source": ["p=inspect.getfullargspec(add)\nprint(add.__name__)\nprint(p.args)\nprint(len(p.defaults))\nprint(p.annotations)\nnewList = list(reversed(p_fun.args))\nprint(newList.index('z'))"], "execution_count": 64, "execution_state": "idle", "outputs": [{"output_type": "stream", "name": "stdout", "text": ["add\n['x', 'y', 'z']\n1\n{'x': <class 'int'>, 'y': <class 'int'>, 'z': <class 'int'>}\n0\n"]}], "metadata": {"smart_notebook": {"type": "code", "cell_id": "4a81cb12e6b7fe42aae99ede50923d6d", "hide_input_from_viewers": false, "hide_output_from_viewers": false, "execution_start": 0, "execution_millis": 63, "source": ["p=inspect.getfullargspec(add)\nprint(add.__name__)\nprint(p.args)\nprint(len(p.defaults))\nprint(p.annotations)\nnewList = list(reversed(p_fun.args))\nprint(newList.index('z'))"]}}}, {"cell_type": "code", "source": ["bbb=[\"ddddd\",\"aaaa\"]\nprint(','.join(bbb))"], "execution_count": 132, "execution_state": "idle", "outputs": [{"output_type": "stream", "name": "stdout", "text": ["ddddd,aaaa\n"]}], "metadata": {"smart_notebook": {"type": "code", "cell_id": "5d26f8c8633e1647dc68da164c7b5085", "hide_input_from_viewers": false, "hide_output_from_viewers": false, "execution_start": 0, "execution_millis": 56, "source": ["bbb=[\"ddddd\",\"aaaa\"]\nprint(','.join(bbb))"]}}}], "inputVisible": false}]