[{"name": "sheet1", "metadata": {"smart_notebook": {"version": 1, "computation_mode": "", "package_manager": "", "base_environment": "", "packages": [], "kernelspec": {"display_name": "Python 3 (ipykernel)", "language": "python", "name": "python3"}}}, "nbformat": 4, "nbformat_minor": 4, "cells": [{"cell_type": "code", "source": ["import pandas as pd\ndf=pd.read_csv(\"/home/data/all_data_01.csv\")\ndf"], "execution_count": 40, "execution_state": "idle", "outputs": [{"output_type": "execute_result", "metadata": {}, "data": {"text/plain": "     Unnamed: 0    \u90e8\u95e8              \u9879\u76ee   \u59d3\u540d         \u804c\u4f4d  \u5c97\u4f4d\u5de5\u4f5c\u7ee9\u6548\u5206\u6570  \u4e3b\u89c2\u80fd\u52a8\u6027\u7ee9\u6548\u5206\u6570  \\\n0             0  DIPC         \u90e8\u95e8\u7ee9\u6548\u8003\u6838\u8868  \u4f55\u5609\u6960    JAVA\u5de5\u7a0b\u5e08      51.0       22.0   \n1             1  DIPC       \u5e7f\u4e1c\u79fb\u52a8\u9879\u76ee\u8003\u6838\u8868  \u4f55\u5609\u6960  JAVA\u5f00\u53d1\u5de5\u7a0b\u5e08      54.0       25.0   \n2             2   NaN       \u91d1\u5c71\u57ce\u8fd0\u9879\u76ee\u8003\u6838\u8868  \u4f55\u5609\u6960        NaN      67.0       30.0   \n3             3  DIPC         \u90e8\u95e8\u7ee9\u6548\u8003\u6838\u8868  \u51af\u6da3\u6770      \u7cfb\u7edf\u67b6\u6784\u5e08      29.0       13.0   \n4             4  DIPC       \u5e7f\u4e1c\u79fb\u52a8\u9879\u76ee\u8003\u6838\u8868  \u51af\u7115\u6770    Java\u5de5\u7a0b\u5e08      56.0       26.0   \n..          ...   ...             ...  ...        ...       ...        ...   \n241         241  \u9500\u552e\u4e09\u90e8          \u90e8\u95e8\u4e3b\u7ba1\u8bc4\u5206  \u738b\u65ed\u7ea2         \u9500\u552e      65.0       29.0   \n242         242  \u9500\u552e\u4e09\u90e8   \u5458\u5de5\u5e74\u5ea6\u7ee9\u6548\u8003\u6838\u65b9\u6848_\u5f20\u4e39   \u5f20\u4e39       \u9879\u76ee\u7ecf\u7406      66.0       24.0   \n243         243  \u9500\u552e\u4e09\u90e8  \u5458\u5de5\u5e74\u5ea6\u7ee9\u6548\u8003\u6838\u65b9\u6848_\u90d1\u4f5c\u6881  \u90d1\u4f5c\u6881    \u9ad8\u7ea7\u5f00\u53d1\u5de5\u7a0b\u5e08      60.0       21.0   \n244         244  \u9500\u552e\u4e8c\u90e8  \u5458\u5de5\u5e74\u5ea6\u7ee9\u6548\u8003\u6838\u65b9\u6848-\u845b\u6625\u6797  \u845b\u6625\u6797         \u9500\u552e      38.0       20.5   \n245         245  \u9500\u552e\u4e8c\u90e8  \u5458\u5de5\u5e74\u5ea6\u7ee9\u6548\u8003\u6838\u65b9\u6848-\u97e9\u7ea2\u8273  \u97e9\u7ea2\u8273         \u9500\u552e      42.0       20.0   \n\n     \u5173\u952e\u4e8b\u4ef6  \n0     NaN  \n1     NaN  \n2     NaN  \n3     NaN  \n4     NaN  \n..    ...  \n241   NaN  \n242  0.05  \n243   NaN  \n244   NaN  \n245   NaN  \n\n[246 rows x 8 columns]", "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>\u90e8\u95e8</th>\n      <th>\u9879\u76ee</th>\n      <th>\u59d3\u540d</th>\n      <th>\u804c\u4f4d</th>\n      <th>\u5c97\u4f4d\u5de5\u4f5c\u7ee9\u6548\u5206\u6570</th>\n      <th>\u4e3b\u89c2\u80fd\u52a8\u6027\u7ee9\u6548\u5206\u6570</th>\n      <th>\u5173\u952e\u4e8b\u4ef6</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>DIPC</td>\n      <td>\u90e8\u95e8\u7ee9\u6548\u8003\u6838\u8868</td>\n      <td>\u4f55\u5609\u6960</td>\n      <td>JAVA\u5de5\u7a0b\u5e08</td>\n      <td>51.0</td>\n      <td>22.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>DIPC</td>\n      <td>\u5e7f\u4e1c\u79fb\u52a8\u9879\u76ee\u8003\u6838\u8868</td>\n      <td>\u4f55\u5609\u6960</td>\n      <td>JAVA\u5f00\u53d1\u5de5\u7a0b\u5e08</td>\n      <td>54.0</td>\n      <td>25.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>NaN</td>\n      <td>\u91d1\u5c71\u57ce\u8fd0\u9879\u76ee\u8003\u6838\u8868</td>\n      <td>\u4f55\u5609\u6960</td>\n      <td>NaN</td>\n      <td>67.0</td>\n      <td>30.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>DIPC</td>\n      <td>\u90e8\u95e8\u7ee9\u6548\u8003\u6838\u8868</td>\n      <td>\u51af\u6da3\u6770</td>\n      <td>\u7cfb\u7edf\u67b6\u6784\u5e08</td>\n      <td>29.0</td>\n      <td>13.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>DIPC</td>\n      <td>\u5e7f\u4e1c\u79fb\u52a8\u9879\u76ee\u8003\u6838\u8868</td>\n      <td>\u51af\u7115\u6770</td>\n      <td>Java\u5de5\u7a0b\u5e08</td>\n      <td>56.0</td>\n      <td>26.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>241</th>\n      <td>241</td>\n      <td>\u9500\u552e\u4e09\u90e8</td>\n      <td>\u90e8\u95e8\u4e3b\u7ba1\u8bc4\u5206</td>\n      <td>\u738b\u65ed\u7ea2</td>\n      <td>\u9500\u552e</td>\n      <td>65.0</td>\n      <td>29.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>242</th>\n      <td>242</td>\n      <td>\u9500\u552e\u4e09\u90e8</td>\n      <td>\u5458\u5de5\u5e74\u5ea6\u7ee9\u6548\u8003\u6838\u65b9\u6848_\u5f20\u4e39</td>\n      <td>\u5f20\u4e39</td>\n      <td>\u9879\u76ee\u7ecf\u7406</td>\n      <td>66.0</td>\n      <td>24.0</td>\n      <td>0.05</td>\n    </tr>\n    <tr>\n      <th>243</th>\n      <td>243</td>\n      <td>\u9500\u552e\u4e09\u90e8</td>\n      <td>\u5458\u5de5\u5e74\u5ea6\u7ee9\u6548\u8003\u6838\u65b9\u6848_\u90d1\u4f5c\u6881</td>\n      <td>\u90d1\u4f5c\u6881</td>\n      <td>\u9ad8\u7ea7\u5f00\u53d1\u5de5\u7a0b\u5e08</td>\n      <td>60.0</td>\n      <td>21.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>244</th>\n      <td>244</td>\n      <td>\u9500\u552e\u4e8c\u90e8</td>\n      <td>\u5458\u5de5\u5e74\u5ea6\u7ee9\u6548\u8003\u6838\u65b9\u6848-\u845b\u6625\u6797</td>\n      <td>\u845b\u6625\u6797</td>\n      <td>\u9500\u552e</td>\n      <td>38.0</td>\n      <td>20.5</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>245</th>\n      <td>245</td>\n      <td>\u9500\u552e\u4e8c\u90e8</td>\n      <td>\u5458\u5de5\u5e74\u5ea6\u7ee9\u6548\u8003\u6838\u65b9\u6848-\u97e9\u7ea2\u8273</td>\n      <td>\u97e9\u7ea2\u8273</td>\n      <td>\u9500\u552e</td>\n      <td>42.0</td>\n      <td>20.0</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>246 rows \u00d7 8 columns</p>\n</div>"}}], "metadata": {"smart_notebook": {"type": "code", "cell_id": "7c6f8d3490b479478498a8a92f34f529", "hide_input_from_viewers": false, "hide_output_from_viewers": false, "execution_start": 1657258845448, "execution_millis": 244, "source": ["import pandas as pd\ndf=pd.read_csv(\"/home/data/all_data_01.csv\")\ndf"]}}}, {"cell_type": "code", "source": ["df1=df.dropna(axis=0,subset=['\u90e8\u95e8'])\ndf1=df1[df1['\u4e3b\u89c2\u80fd\u52a8\u6027\u7ee9\u6548\u5206\u6570']<35]"], "execution_count": 42, "execution_state": "idle", "outputs": [], "metadata": {"smart_notebook": {"type": "code", "cell_id": "5bc3c88891ba89441d9a17896e93b9bf", "hide_input_from_viewers": false, "hide_output_from_viewers": false, "execution_start": 0, "execution_millis": 180, "source": ["df1=df.dropna(axis=0,subset=['\u90e8\u95e8'])\ndf1=df1[df1['\u4e3b\u89c2\u80fd\u52a8\u6027\u7ee9\u6548\u5206\u6570']<35]"]}}}, {"cell_type": "code", "source": ["df2=__SNB_DI_PIVOT({\"dfCloumnList\":[{\"c_name\":\"Unnamed: 0\",\"c_type\":\"quantitative\"},{\"c_name\":\"\u90e8\u95e8\",\"c_type\":\"categorical\"},{\"c_name\":\"\u9879\u76ee\",\"c_type\":\"categorical\"},{\"c_name\":\"\u59d3\u540d\",\"c_type\":\"categorical\"},{\"c_name\":\"\u804c\u4f4d\",\"c_type\":\"categorical\"},{\"c_name\":\"\u5c97\u4f4d\u5de5\u4f5c\u7ee9\u6548\u5206\u6570\",\"c_type\":\"quantitative\"},{\"c_name\":\"\u4e3b\u89c2\u80fd\u52a8\u6027\u7ee9\u6548\u5206\u6570\",\"c_type\":\"quantitative\"},{\"c_name\":\"\u5173\u952e\u4e8b\u4ef6\",\"c_type\":\"quantitative\"}],\"transform_type\":\"pivot\",\"in_data\":\"df1\",\"config\":{\"rows\":[{\"field\":\"\u90e8\u95e8\"}],\"columns\":[],\"values\":[{\"field\":\"\u59d3\u540d\",\"op\":\"count\"}],\"fill_value\":0},\"out_data\":\"df2\"},context=globals())"], "execution_count": 39, "metadata": {"smart_notebook": {"type": "pivotTransform", "cell_id": "fb0ddbe006382044bf0864f0a6d1647c", "hide_input_from_viewers": true, "hide_output_from_viewers": false, "source": ["df2=__SNB_DI_PIVOT({\"dfCloumnList\":[{\"c_name\":\"Unnamed: 0\",\"c_type\":\"quantitative\"},{\"c_name\":\"\u90e8\u95e8\",\"c_type\":\"categorical\"},{\"c_name\":\"\u9879\u76ee\",\"c_type\":\"categorical\"},{\"c_name\":\"\u59d3\u540d\",\"c_type\":\"categorical\"},{\"c_name\":\"\u804c\u4f4d\",\"c_type\":\"categorical\"},{\"c_name\":\"\u5c97\u4f4d\u5de5\u4f5c\u7ee9\u6548\u5206\u6570\",\"c_type\":\"quantitative\"},{\"c_name\":\"\u4e3b\u89c2\u80fd\u52a8\u6027\u7ee9\u6548\u5206\u6570\",\"c_type\":\"quantitative\"},{\"c_name\":\"\u5173\u952e\u4e8b\u4ef6\",\"c_type\":\"quantitative\"}],\"transform_type\":\"pivot\",\"in_data\":\"df1\",\"config\":{\"rows\":[{\"field\":\"\u90e8\u95e8\"}],\"columns\":[],\"values\":[{\"field\":\"\u59d3\u540d\",\"op\":\"count\"}],\"fill_value\":0},\"out_data\":\"df2\"},context=globals())"], "cell_properties": {"dfCloumnList": [{"c_name": "Unnamed: 0", "c_type": "quantitative"}, {"c_name": "\u90e8\u95e8", "c_type": "categorical"}, {"c_name": "\u9879\u76ee", "c_type": "categorical"}, {"c_name": "\u59d3\u540d", "c_type": "categorical"}, {"c_name": "\u804c\u4f4d", "c_type": "categorical"}, {"c_name": "\u5c97\u4f4d\u5de5\u4f5c\u7ee9\u6548\u5206\u6570", "c_type": "quantitative"}, {"c_name": "\u4e3b\u89c2\u80fd\u52a8\u6027\u7ee9\u6548\u5206\u6570", "c_type": "quantitative"}, {"c_name": "\u5173\u952e\u4e8b\u4ef6", "c_type": "quantitative"}], "transform_type": "pivot", "in_data": "df1", "config": {"rows": [{"field": "\u90e8\u95e8"}], "columns": [], "values": [{"field": "\u59d3\u540d", "op": "count"}], "fill_value": 0}, "out_data": "df2"}, "execution_millis": 216}}, "outputs": [{"output_type": "display_data", "metadata": {}, "data": {"text/plain": "<IPython.core.display.HTML object>", "text/html": "\n\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n    <title>Ag-Grid Basic Example</title>\n    <script>\n        require.config({\n        paths: {\n            'agGrid':'/ag-grid-community.min'\n        }\n    });\n\n    require(['agGrid'], function(agGrid) {\n    //    agNumberColumnFilter\t\u6570\u5b57\u7c7b\u578b\u8fc7\u6ee4\u5668\uff0c\u63d0\u4f9b\u5927\u4e8e\u3001\u5c0f\u4e8e\u3001\u7b49\u4e8e\u3001\u4e0d\u7b49\u4e8e\u3001\u533a\u95f4\u6570\u5b57\u6bd4\u8f83\n    //    agTextColumnFilter\t\u5b57\u7b26\u4e32\u7c7b\u578b\u5237\u9009\u5668\uff0c\u63d0\u4f9b\u5305\u542b\u3001\u4e0d\u5305\u542b\u3001\u7b49\u4e8e\u3001\u5f00\u59cb\u7b49\u4e8e\u3001\u7ed3\u675f\u7b49\u4e8e\u6bd4\u8f83\n    //    agDateColumnFilter\t\u65f6\u95f4\u7c7b\u578b\u5237\u9009\u5668\uff0c\u63d0\u4f9b\u5927\u4e8e\u3001\u5c0f\u4e8e\u3001\u7b49\u4e8e\u3001\u4e0d\u7b49\u4e8e\u3001\u533a\u95f4\u6570\u5b57\u6bd4\u8f83\n    var columnDefs =[{headerName: '\u90e8\u95e8',field: 'col_id_0'},{\n                                       headerName: 'count_\u59d3\u540d',\n                                       field: 'col_id_1',\n                                       valueFormatter: params => params.data.col_id_1.toFixed(0),\n                                       },];\n\n    // specify the data\n    var rowData =[{\"col_id_0\": \"\\t\\t\\u5e94\\u7528\\u4e00\\u90e8\", \"col_id_1\": 2}, {\"col_id_0\": \"\\t\\u5e94\\u7528\\u4e8c\\u90e8\\uff08\\u5916\\u5305\\uff09\", \"col_id_1\": 2}, {\"col_id_0\": \"DIPC\", \"col_id_1\": 28}, {\"col_id_0\": \"PMO\", \"col_id_1\": 3}, {\"col_id_0\": \"SNB\\u4ea7\\u54c1\\u7ec4\", \"col_id_1\": 4}, {\"col_id_0\": \"\\u4e09\\u7ef4\\u53ef\\u89c6\\u5316\", \"col_id_1\": 8}, {\"col_id_0\": \"\\u4eba\\u4e8b\\u90e8\", \"col_id_1\": 2}, {\"col_id_0\": \"\\u552e\\u524d\", \"col_id_1\": 3}, {\"col_id_0\": \"\\u552e\\u524d\\u65b9\\u6848\\u90e8\", \"col_id_1\": 2}, {\"col_id_0\": \"\\u552e\\u524d\\u89e3\\u51b3\\u65b9\\u6848\\u90e8\", \"col_id_1\": 1}, {\"col_id_0\": \"\\u5546\\u52a1\\u90e8\", \"col_id_1\": 1}, {\"col_id_0\": \"\\u5e02\\u573a\\u90e8\", \"col_id_1\": 1}, {\"col_id_0\": \"\\u5e94\\u7528\\u4e00\\u90e8\", \"col_id_1\": 74}, {\"col_id_0\": \"\\u5e94\\u7528\\u4e09\\u90e8\", \"col_id_1\": 4}, {\"col_id_0\": \"\\u5e94\\u7528\\u4e09\\u90e8-\\u5b9d\\u9a6c\\u4e00\\u7ec4\", \"col_id_1\": 10}, {\"col_id_0\": \"\\u5e94\\u7528\\u4e09\\u90e8\\u2014\\u4e00\\u7ec4\", \"col_id_1\": 4}, {\"col_id_0\": \"\\u5e94\\u7528\\u4e09\\u90e8\\u2014\\u5b9d\\u9a6c\\u4e00\\u7ec4\", \"col_id_1\": 1}, {\"col_id_0\": \"\\u5e94\\u7528\\u4e09\\u90e8\\u2014\\u5b9d\\u9a6c\\u4e8c\\u7ec4\", \"col_id_1\": 8}, {\"col_id_0\": \"\\u5e94\\u7528\\u4e09\\u90e8\\uff08\\u5916\\u5305\\uff09\", \"col_id_1\": 3}, {\"col_id_0\": \"\\u5e94\\u7528\\u4e8c\\u90e8\", \"col_id_1\": 8}, {\"col_id_0\": \"\\u5e94\\u7528\\u4e8c\\u90e8\\uff08\\u5916\\u5305\\uff09\", \"col_id_1\": 3}, {\"col_id_0\": \"\\u676d\\u5dde\", \"col_id_1\": 1}, {\"col_id_0\": \"\\u676d\\u5dde\\u5206\\u516c\\u53f8\", \"col_id_1\": 15}, {\"col_id_0\": \"\\u676d\\u5dde\\u529e\", \"col_id_1\": 1}, {\"col_id_0\": \"\\u676d\\u5dde\\u7814\\u53d1\\u90e8\", \"col_id_1\": 1}, {\"col_id_0\": \"\\u7814\\u53d1\\u4e8c\\u90e8\", \"col_id_1\": 22}, {\"col_id_0\": \"\\u7ecf\\u8425\\u7ba1\\u7406\\u90e8\", \"col_id_1\": 1}, {\"col_id_0\": \"\\u8fd0\\u8425\\u7ba1\\u7406\\u90e8\", \"col_id_1\": 3}, {\"col_id_0\": \"\\u9500\\u552e\", \"col_id_1\": 1}, {\"col_id_0\": \"\\u9500\\u552e\\u4e09\\u90e8\", \"col_id_1\": 4}, {\"col_id_0\": \"\\u9500\\u552e\\u4e8c\\u90e8\", \"col_id_1\": 2}, {\"col_id_0\": \"\\u9500\\u552e\\u90e8\", \"col_id_1\": 3}];\n\n    // let the grid know which columns and what data to use\n    const gridOptions = {\n        columnDefs: columnDefs,\n        rowData: rowData,\n        floatingFilter: true,\n        domLayout:'autoHeight',\n        onGridReady: function () { \n         //   gridOptions.api.sizeColumnsToFit();//\u8c03\u6574\u8868\u683c\u5927\u5c0f\u81ea\u9002\u5e94\n        },\n        defaultColDef: {\n            resizable: true,//\u662f\u5426\u53ef\u4ee5\u8c03\u6574\u5217\u5927\u5c0f\uff0c\u5c31\u662f\u62d6\u52a8\u6539\u53d8\u5217\u5927\u5c0f\n            filter: true, //\u5f00\u542f\u5237\u9009\n            sortable: true, //\u5f00\u542f\u6392\u5e8f\n        }, \n        pagination: true,  //\u5f00\u542f\u5206\u9875\uff08\u524d\u7aef\u5206\u9875\uff09\n        domLayout:'autoHeight',\n        paginationPageSize: 8,\n        // paginationAutoPageSize: true, //\u6839\u636e\u7f51\u9875\u9ad8\u5ea6\u81ea\u52a8\u5206\u9875\uff08\u524d\u7aef\u5206\u9875\uff09height: 440px; \n    };\n\n        const gridDiv = document.querySelector('#myGrid');\n        new agGrid.Grid(gridDiv, gridOptions);\n    })\n\n        </script>\n    </head>\n    <body>\n        <div id=\"myGrid\" style=\"height: 440px;width:100%;\" class=\"ag-theme-alpine\"></div>\n    </body>\n    </html>\n\n    "}}], "execution_state": "idle"}, {"cell_type": "code", "source": ["from snb_plugin.snbcharts.SnbCharts import boxPlot\nboxPlot(df1, '\u90e8\u95e8', '\u5c97\u4f4d\u5de5\u4f5c\u7ee9\u6548\u5206\u6570', title='\u5c97\u4f4d\u5de5\u4f5c\u7ee9\u6548\u5206\u6570\\\\n              By SNB', height='580px', width='1250px')"], "execution_count": 60, "execution_state": "idle", "outputs": [{"output_type": "stream", "name": "stdout", "text": ["\n"]}, {"output_type": "display_data", "metadata": {}, "data": {"text/plain": "<IPython.core.display.HTML object>", "text/html": "\n    <!DOCTYPE html>\n    <html lang=\"en\">\n     <head>\n      <meta charset=\"UTF-8\">\n      <title>Document</title>\n     </head>\n     <script >\n    require.config({\n            paths: {\n                'echarts':'https://fastly.jsdelivr.net/npm/echarts@5.4.0/dist/echarts.min'\n            }\n        });\n    require(['echarts'], function(echarts) {\n\n    var chartDom = document.getElementById('main');\n    var myChart = echarts.init(chartDom);\n    var option;\n    x_data = ['\u5e94\u7528\u4e09\u90e8\u2014\u5b9d\u9a6c\u4e00\u7ec4', '\u9500\u552e\u4e09\u90e8', '\u676d\u5dde\u7814\u53d1\u90e8', '\u676d\u5dde\u5206\u516c\u53f8', '\u5e94\u7528\u4e09\u90e8\u2014\u4e00\u7ec4', '\u4e09\u7ef4\u53ef\u89c6\u5316', '\u5e94\u7528\u4e09\u90e8\uff08\u5916\u5305\uff09', '\u5e94\u7528\u4e00\u90e8', '\\t\u5e94\u7528\u4e8c\u90e8\uff08\u5916\u5305\uff09', '\u9500\u552e\u4e8c\u90e8', '\u5e94\u7528\u4e09\u90e8', '\u9500\u552e\u90e8', '\\t\\t\u5e94\u7528\u4e00\u90e8', 'SNB\u4ea7\u54c1\u7ec4', '\u5e94\u7528\u4e8c\u90e8', '\u5e94\u7528\u4e8c\u90e8\uff08\u5916\u5305\uff09', 'PMO', '\u552e\u524d', 'DIPC', '\u5e02\u573a\u90e8', '\u7ecf\u8425\u7ba1\u7406\u90e8', '\u4eba\u4e8b\u90e8', '\u676d\u5dde', '\u5e94\u7528\u4e09\u90e8\u2014\u5b9d\u9a6c\u4e8c\u7ec4', '\u7814\u53d1\u4e8c\u90e8', '\u5e94\u7528\u4e09\u90e8-\u5b9d\u9a6c\u4e00\u7ec4', '\u5546\u52a1\u90e8', '\u552e\u524d\u65b9\u6848\u90e8', '\u8fd0\u8425\u7ba1\u7406\u90e8', '\u9500\u552e', '\u676d\u5dde\u529e'];\n\noption = {\n  title: [\n    {\n      text: '\u5c97\u4f4d\u5de5\u4f5c\u7ee9\u6548\u5206\u6570\\n              By SNB',\n      left: 'center'\n    }\n  ],\n  dataset: [\n    {\n      // prettier-ignore\n      source: [[64.4], [66.0, 65.0, 66.0, 60.0], [67.0], [60.0, 45.0, 45.0, 60.0, 67.0, 68.0, 68.0, 55.0, 65.0, 65.0, 62.0, 65.0, 50.0, 62.0, 65.0], [55.8, 55.0, 56.3, 56.3], [68.0, 63.0, 65.0, 62.0, 63.0, 62.0, 62.0, 64.0], [52.5, 53.5, 38.9], [62.0, 60.0, 54.0, 66.0, 54.0, 59.0, 51.0, 59.0, 64.0, 54.0, 68.0, 64.0, 57.0, 68.0, 53.0, 65.0, 56.0, 68.0, 63.0, 63.0, 68.0, 59.0, 61.0, 62.0, 62.0, 68.0, 64.0, 57.0, 56.0, 68.0, 63.0, 66.0, 55.0, 60.0, 59.0, 60.0, 63.0, 61.0, 63.0, 64.0, 64.0, 57.0, 61.0, 63.0, 62.0, 65.0, 65.0, 61.0, 54.0, 59.0, 59.0, 59.0, 60.0, 60.0, 68.0, 62.0, 65.0, 63.0, 64.0, 65.0, 60.0, 63.0, 57.0, 68.0, 62.0, 54.0, 68.0, 54.0, 64.0, 61.0, 67.0, 62.0, 64.0, 63.0], [63.0, 63.0], [38.0, 42.0], [58.0, 62.0, 53.0, 51.5], [38.0, 48.0, 45.0], [65.0, 64.0], [52.0, 63.0, 45.0, 48.0], [61.0, 56.0, 54.0, 63.0, 58.0, 49.0, 57.0, 51.0], [56.0, 39.0, 57.0], [52.0, 64.0, 61.0], [65.0, 58.0, 58.0], [51.0, 54.0, 29.0, 56.0, 52.0, 62.0, 52.0, 54.0, 51.0, 62.0, 58.0, 54.0, 61.0, 51.0, 65.0, 48.0, 52.0, 57.0, 66.0, 66.0, 62.0, 64.0, 56.0, 59.0, 54.0, 57.0, 60.0, 60.0], [55.0], [54.0], [64.0, 61.5], [65.0], [49.0, 59.0, 66.0, 57.0, 54.0, 63.8, 61.0, 58.0], [63.0, 58.0, 62.0, 54.0, 60.0, 65.0, 57.0, 62.0, 51.0, 54.0, 57.0, 55.0, 50.0, 49.0, 64.0, 51.0, 51.0, 53.0, 54.0, 62.0, 65.0, 62.0], [60.0, 62.0, 62.0, 59.0, 57.0, 60.0, 62.0, 62.0, 59.0, 57.0], [64.0], [54.0, 63.0], [59.0, 53.0, 52.0], [45.0], [62.0]]\n    },\n    {\n      transform: {\n        type: 'boxplot',\n         config: {\n          itemNameFormatter: function (params) {\n            return x_data[params.value];\n          }\n        }\n      }\n    },\n    {\n      fromDatasetIndex: 1,\n      fromTransformResult: 1\n    }\n  ],\n  tooltip: {\n    trigger: 'item',\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n  grid: {\n    left: '5%',\n    right: '5%',\n    bottom: '5%'\n  },\n  xAxis: {\n    type: 'category',\n    name:'\u90e8\u95e8',\n    boundaryGap: true,\n    nameGap: 30,\n    splitArea: {\n      show: true\n    },\n    splitLine: {\n      show: false\n    }\n  },\n  yAxis: {\n    type: 'value',\n    name: '\u5c97\u4f4d\u5de5\u4f5c\u7ee9\u6548\u5206\u6570',\n    splitArea: {\n      show: true\n    }\n  },\n  series: [\n    {\n      name: 'boxplot',\n      type: 'boxplot',\n      datasetIndex: 1\n    },\n    {\n      name: 'outlier',\n      type: 'scatter',\n      datasetIndex: 2\n    }\n  ]\n};    \n    option && myChart.setOption(option);\n    //\n    })\n     </script>\n     <body >\n      <div id=\"main\" style=\"height:580px;width: 1250px;\"></div>\n     </body>\n    </html>\n    "}}], "metadata": {"smart_notebook": {"type": "code", "cell_id": "cd74da4d89e768471b899b38132a3d10", "hide_input_from_viewers": false, "hide_output_from_viewers": false, "execution_start": 0, "execution_millis": 286, "source": ["from snb_plugin.snbcharts.SnbCharts import boxPlot\nboxPlot(df1, '\u90e8\u95e8', '\u5c97\u4f4d\u5de5\u4f5c\u7ee9\u6548\u5206\u6570', title='\u5c97\u4f4d\u5de5\u4f5c\u7ee9\u6548\u5206\u6570\\\\n              By SNB', height='580px', width='1250px')"]}}}, {"cell_type": "code", "source": ["from snb_plugin.snbcharts.SnbCharts import boxPlot\nboxPlot(df1, '\u90e8\u95e8', '\u4e3b\u89c2\u80fd\u52a8\u6027\u7ee9\u6548\u5206\u6570', title='\u4e3b\u89c2\u80fd\u52a8\u6027\u7ee9\u6548\u5206\u6570\\\\n              By SNB', height='580px', width='1250px')"], "execution_count": 61, "execution_state": "idle", "outputs": [{"output_type": "stream", "name": "stdout", "text": ["\n"]}, {"output_type": "display_data", "metadata": {}, "data": {"text/plain": "<IPython.core.display.HTML object>", "text/html": "\n    <!DOCTYPE html>\n    <html lang=\"en\">\n     <head>\n      <meta charset=\"UTF-8\">\n      <title>Document</title>\n     </head>\n     <script >\n    require.config({\n            paths: {\n                'echarts':'https://fastly.jsdelivr.net/npm/echarts@5.4.0/dist/echarts.min'\n            }\n        });\n    require(['echarts'], function(echarts) {\n\n    var chartDom = document.getElementById('main');\n    var myChart = echarts.init(chartDom);\n    var option;\n    x_data = ['\u5e94\u7528\u4e09\u90e8\u2014\u5b9d\u9a6c\u4e00\u7ec4', '\u9500\u552e\u4e09\u90e8', '\u676d\u5dde\u7814\u53d1\u90e8', '\u676d\u5dde\u5206\u516c\u53f8', '\u5e94\u7528\u4e09\u90e8\u2014\u4e00\u7ec4', '\u4e09\u7ef4\u53ef\u89c6\u5316', '\u5e94\u7528\u4e09\u90e8\uff08\u5916\u5305\uff09', '\u5e94\u7528\u4e00\u90e8', '\\t\u5e94\u7528\u4e8c\u90e8\uff08\u5916\u5305\uff09', '\u9500\u552e\u4e8c\u90e8', '\u5e94\u7528\u4e09\u90e8', '\u9500\u552e\u90e8', '\\t\\t\u5e94\u7528\u4e00\u90e8', 'SNB\u4ea7\u54c1\u7ec4', '\u5e94\u7528\u4e8c\u90e8', '\u5e94\u7528\u4e8c\u90e8\uff08\u5916\u5305\uff09', 'PMO', '\u552e\u524d', 'DIPC', '\u5e02\u573a\u90e8', '\u7ecf\u8425\u7ba1\u7406\u90e8', '\u4eba\u4e8b\u90e8', '\u676d\u5dde', '\u5e94\u7528\u4e09\u90e8\u2014\u5b9d\u9a6c\u4e8c\u7ec4', '\u7814\u53d1\u4e8c\u90e8', '\u5e94\u7528\u4e09\u90e8-\u5b9d\u9a6c\u4e00\u7ec4', '\u5546\u52a1\u90e8', '\u552e\u524d\u65b9\u6848\u90e8', '\u8fd0\u8425\u7ba1\u7406\u90e8', '\u9500\u552e', '\u676d\u5dde\u529e'];\n\noption = {\n  title: [\n    {\n      text: '\u4e3b\u89c2\u80fd\u52a8\u6027\u7ee9\u6548\u5206\u6570\\n              By SNB',\n      left: 'center'\n    }\n  ],\n  dataset: [\n    {\n      // prettier-ignore\n      source: [[27.31], [29.0, 29.0, 24.0, 21.0], [30.0], [30.0, 30.0, 25.0, 30.0, 30.0, 30.0, 30.0, 20.0, 30.0, 30.0, 30.0, 30.0, 25.0, 30.0, 30.0], [24.2, 24.2, 23.04, 24.2], [27.0, 28.0, 27.0, 28.0, 29.0, 25.0, 28.0, 28.0], [21.8, 21.8, 21.3], [26.0, 27.0, 25.0, 22.0, 26.0, 25.0, 24.0, 28.0, 29.0, 26.0, 30.0, 26.0, 28.0, 30.0, 24.0, 22.0, 27.0, 30.0, 28.0, 28.0, 30.0, 27.0, 29.0, 26.0, 26.0, 29.0, 28.0, 27.0, 25.0, 30.0, 28.0, 28.0, 27.0, 27.0, 28.0, 26.0, 29.0, 27.0, 29.0, 28.0, 28.0, 28.0, 29.0, 30.0, 28.0, 28.0, 29.0, 28.0, 26.0, 26.0, 25.0, 29.0, 25.0, 26.0, 30.0, 27.0, 26.0, 26.0, 28.0, 26.0, 25.0, 25.0, 25.0, 29.0, 30.0, 24.0, 30.0, 25.0, 28.0, 28.0, 28.0, 26.0, 28.0, 28.0], [26.0, 26.0], [20.5, 20.0], [27.0, 27.0, 19.0, 21.0], [22.0, 26.0, 25.0], [28.0, 28.0], [19.0, 27.0, 15.0, 23.0], [29.0, 29.0, 29.0, 29.0, 28.0, 29.0, 29.0, 29.0], [29.0, 29.0, 29.0], [23.0, 27.0, 26.0], [24.0, 18.0, 18.0], [22.0, 25.0, 13.0, 26.0, 22.0, 27.0, 23.0, 24.0, 22.0, 27.0, 23.0, 21.0, 24.0, 22.0, 28.0, 25.0, 20.0, 29.0, 28.0, 29.0, 27.0, 28.0, 25.0, 27.0, 20.0, 25.0, 26.0, 26.0], [26.0], [23.0], [27.0, 27.0], [28.0], [11.0, 29.0, 29.0, 28.0, 26.0, 27.31, 26.3, 26.3], [27.0, 26.0, 30.0, 22.0, 25.0, 25.0, 22.0, 28.0, 22.0, 21.0, 23.0, 21.0, 19.0, 17.0, 26.0, 18.0, 22.0, 22.0, 22.0, 30.0, 25.0, 28.0], [26.0, 28.0, 26.0, 26.0, 26.0, 26.0, 28.0, 26.0, 26.0, 26.0], [26.0], [19.0, 27.0], [25.0, 23.0, 22.0], [19.0], [30.0]]\n    },\n    {\n      transform: {\n        type: 'boxplot',\n         config: {\n          itemNameFormatter: function (params) {\n            return x_data[params.value];\n          }\n        }\n      }\n    },\n    {\n      fromDatasetIndex: 1,\n      fromTransformResult: 1\n    }\n  ],\n  tooltip: {\n    trigger: 'item',\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n  grid: {\n    left: '5%',\n    right: '5%',\n    bottom: '5%'\n  },\n  xAxis: {\n    type: 'category',\n    name:'\u90e8\u95e8',\n    boundaryGap: true,\n    nameGap: 30,\n    splitArea: {\n      show: true\n    },\n    splitLine: {\n      show: false\n    }\n  },\n  yAxis: {\n    type: 'value',\n    name: '\u4e3b\u89c2\u80fd\u52a8\u6027\u7ee9\u6548\u5206\u6570',\n    splitArea: {\n      show: true\n    }\n  },\n  series: [\n    {\n      name: 'boxplot',\n      type: 'boxplot',\n      datasetIndex: 1\n    },\n    {\n      name: 'outlier',\n      type: 'scatter',\n      datasetIndex: 2\n    }\n  ]\n};    \n    option && myChart.setOption(option);\n    //\n    })\n     </script>\n     <body >\n      <div id=\"main\" style=\"height:580px;width: 1250px;\"></div>\n     </body>\n    </html>\n    "}}], "metadata": {"smart_notebook": {"type": "code", "cell_id": "7cca482202d43046c0096550cc143f07", "hide_input_from_viewers": false, "hide_output_from_viewers": false, "execution_start": 0, "execution_millis": 282, "source": ["from snb_plugin.snbcharts.SnbCharts import boxPlot\nboxPlot(df1, '\u90e8\u95e8', '\u4e3b\u89c2\u80fd\u52a8\u6027\u7ee9\u6548\u5206\u6570', title='\u4e3b\u89c2\u80fd\u52a8\u6027\u7ee9\u6548\u5206\u6570\\\\n              By SNB', height='580px', width='1250px')"]}}}], "inputVisible": false}]