[{"name": "sheet1", "metadata": {"smart_notebook": {"version": 1, "computation_mode": "", "package_manager": "", "base_environment": "", "packages": [], "kernelspec": {"display_name": "Python 3 (ipykernel)", "language": "python", "name": "python3"}}}, "nbformat": 4, "nbformat_minor": 4, "cells": [{"cell_type": "code", "source": ["import math\ndef calc_pi(n):\n    # \u8ba1\u7b97 1/n^2 \u7684\u548c\n    sum = 0.0\n    i=1\n    while i<n:\n        sum += 1.0 / (i * i)\n        i=i+1\n    # \u5c06\u548c\u4e58\u4ee5 6 \u5e76\u8d4b\u503c\u7ed9 pi\n    return math.sqrt(6 * sum)\npi=calc_pi(10**9)\nprint(pi)"], "execution_count": 32, "execution_state": "idle", "outputs": [{"output_type": "stream", "name": "stdout", "text": ["3.14159264498239\n"]}], "metadata": {"smart_notebook": {"type": "code", "cell_id": "4a623914b60e9b484eb8396b258a6465", "hide_input_from_viewers": false, "hide_output_from_viewers": false, "execution_start": 0, "execution_millis": 168775, "source": ["import math\ndef calc_pi(n):\n    # \u8ba1\u7b97 1/n^2 \u7684\u548c\n    sum = 0.0\n    i=1\n    while i<n:\n        sum += 1.0 / (i * i)\n        i=i+1\n    # \u5c06\u548c\u4e58\u4ee5 6 \u5e76\u8d4b\u503c\u7ed9 pi\n    return math.sqrt(6 * sum)\npi=calc_pi(10**9)\nprint(pi)"]}}, "outputExpand": false}, {"cell_type": "code", "source": ["a:int ='a10'\nprint(c)\nprint(type(c))"], "execution_count": 71, "execution_state": "idle", "outputs": [{"output_type": "stream", "name": "stdout", "text": ["a10\n<class 'str'>\n"]}], "metadata": {"smart_notebook": {"type": "code", "cell_id": "800f36d0c50e0c42f0ca84cc92618a95", "hide_input_from_viewers": false, "hide_output_from_viewers": false, "execution_start": 0, "execution_millis": 63, "source": ["a:int ='a10'\nprint(c)\nprint(type(c))"]}}, "outputExpand": false}, {"cell_type": "code", "source": ["import ast\nprint(ast.dump(ast.parse('~test'), indent=4))"], "execution_count": 158, "execution_state": "idle", "outputs": [{"output_type": "stream", "name": "stdout", "text": ["Module(\n    body=[\n        Expr(\n            value=UnaryOp(\n                op=Invert(),\n                operand=Name(id='test', ctx=Load())))],\n    type_ignores=[])\n"]}], "metadata": {"smart_notebook": {"type": "code", "cell_id": "f3e93e9496146943d29b0a796f7259f5", "hide_input_from_viewers": false, "hide_output_from_viewers": false, "execution_start": 0, "execution_millis": 53, "source": ["import ast\nprint(ast.dump(ast.parse('~test'), indent=4))"]}}}, {"cell_type": "code", "source": ["def add(x:int,y:str=5,a=10):\n  return x+y\n \ndef add(x:int,y:str=5,a:list=[10]):\n  return [x+y]"], "execution_count": 155, "execution_state": "idle", "outputs": [], "metadata": {"smart_notebook": {"type": "code", "cell_id": "b7b478dd890ff84467884308a9d4d5e4", "hide_input_from_viewers": false, "hide_output_from_viewers": false, "execution_start": 0, "execution_millis": 52, "source": ["def add(x:int,y:str=5,a=10):\n  return x+y\n \ndef add(x:int,y:str=5,a:list=[10]):\n  return [x+y]"]}}}, {"cell_type": "code", "source": ["a=add\nprint(a.__name__)\nimport inspect \np=inspect.getfullargspec(a)\nprint(p)\nprint(p.args)\nprint(p.defaults)\nprint(p.annotations)"], "execution_count": 156, "execution_state": "idle", "outputs": [{"output_type": "stream", "name": "stdout", "text": ["add\nFullArgSpec(args=['x', 'y', 'a'], varargs=None, varkw=None, defaults=(5, [10]), kwonlyargs=[], kwonlydefaults=None, annotations={'x': <class 'int'>, 'y': <class 'str'>, 'a': <class 'list'>})\n['x', 'y', 'a']\n(5, [10])\n{'x': <class 'int'>, 'y': <class 'str'>, 'a': <class 'list'>}\n"]}], "metadata": {"smart_notebook": {"type": "code", "cell_id": "33c0263828bdc2438b28c6e2b2c40221", "hide_input_from_viewers": false, "hide_output_from_viewers": false, "execution_start": 0, "execution_millis": 94, "source": ["a=add\nprint(a.__name__)\nimport inspect \np=inspect.getfullargspec(a)\nprint(p)\nprint(p.args)\nprint(p.defaults)\nprint(p.annotations)"]}}, "outputExpand": false}, {"cell_type": "code", "source": ["rr=20,30,50\na=eval(\"a(20,30,50)\")\na"], "execution_count": 157, "execution_state": "idle", "outputs": [{"output_type": "execute_result", "metadata": {}, "data": {"text/plain": "[50]"}}], "metadata": {"smart_notebook": {"type": "code", "cell_id": "53e9f855f9c97f48a6f87bafa36feab0", "hide_input_from_viewers": false, "hide_output_from_viewers": false, "execution_start": 0, "execution_millis": 44, "source": ["rr=20,30,50\na=eval(\"a(20,30,50)\")\na"]}}}, {"cell_type": "code", "source": ["class SNB_ADD:\n  def add(x,y):\n    return x+y"], "execution_count": 76, "execution_state": "idle", "outputs": [], "metadata": {"smart_notebook": {"type": "code", "cell_id": "7fb80e44b14c3b4acab8aabbdf15e5f3", "hide_input_from_viewers": false, "hide_output_from_viewers": false, "execution_start": 0, "execution_millis": 42, "source": ["class SNB_ADD:\n  def add(x,y):\n    return x+y"]}}}, {"cell_type": "code", "source": ["SNB_ADD.add(10,20)"], "execution_count": 77, "execution_state": "idle", "outputs": [{"output_type": "execute_result", "metadata": {}, "data": {"text/plain": "30"}}], "metadata": {"smart_notebook": {"type": "code", "cell_id": "35a20184ca85dc4f44c9f76c1a97a121", "hide_input_from_viewers": false, "hide_output_from_viewers": false, "execution_start": 0, "execution_millis": 75, "source": ["SNB_ADD.add(10,20)"]}}}, {"cell_type": "code", "source": ["code_str=\"\"\"\nif True:\n  add(10,20)\nelif False:\n  sub(10,30)\nelse:\n  pass\n\"\"\"\ncode_str=\"\"\"\nwith open(\"/home/DS DA DE\u6280\u80fd\u5217\u8868.csv\") as fp:\n  str1 = fp.readlines()\n\"\"\"\ncode_str=\"\"\"\nfor i in range(5):\n  print(i)\nelse:\n  print(\"else \")\n\"\"\"\nprint(ast.dump(ast.parse(code_str),indent=4))  #, indent=4"], "execution_count": 91, "execution_state": "idle", "outputs": [{"output_type": "stream", "name": "stdout", "text": ["Module(\n    body=[\n        For(\n            target=Name(id='i', ctx=Store()),\n            iter=Call(\n                func=Name(id='range', ctx=Load()),\n                args=[\n                    Constant(value=5)],\n                keywords=[]),\n            body=[\n                Expr(\n                    value=Call(\n                        func=Name(id='print', ctx=Load()),\n                        args=[\n                            Name(id='i', ctx=Load())],\n                        keywords=[]))],\n            orelse=[\n                Expr(\n                    value=Call(\n                        func=Name(id='print', ctx=Load()),\n                        args=[\n                            Constant(value='else ')],\n                        keywords=[]))])],\n    type_ignores=[])\n"]}], "metadata": {"smart_notebook": {"type": "code", "cell_id": "b7b21b8bbcb72b47a0b8f93b7f9c1ea1", "hide_input_from_viewers": false, "hide_output_from_viewers": false, "execution_start": 0, "execution_millis": 65, "source": ["code_str=\"\"\"\nif True:\n  add(10,20)\nelif False:\n  sub(10,30)\nelse:\n  pass\n\"\"\"\ncode_str=\"\"\"\nwith open(\"/home/DS DA DE\u6280\u80fd\u5217\u8868.csv\") as fp:\n  str1 = fp.readlines()\n\"\"\"\ncode_str=\"\"\"\nfor i in range(5):\n  print(i)\nelse:\n  print(\"else \")\n\"\"\"\nprint(ast.dump(ast.parse(code_str),indent=4))  #, indent=4"]}}}, {"cell_type": "code", "source": ["aa=['22','33']\nbb=['44','66']"], "execution_count": 92, "execution_state": "idle", "outputs": [], "metadata": {"smart_notebook": {"type": "code", "cell_id": "5bd646d65f9b5548a75b72650727b518", "hide_input_from_viewers": false, "hide_output_from_viewers": false, "execution_start": 0, "execution_millis": 74, "source": ["aa=['22','33']\nbb=['44','66']"]}}}, {"cell_type": "code", "source": ["for x,y in zip(aa,bb):\n  print(x,y)"], "execution_count": 93, "execution_state": "idle", "outputs": [{"output_type": "stream", "name": "stdout", "text": ["22 44\n33 66\n"]}], "metadata": {"smart_notebook": {"type": "code", "cell_id": "3ee93d213f7a83463c3b3a33883743f2", "hide_input_from_viewers": false, "hide_output_from_viewers": false, "execution_start": 0, "execution_millis": 62, "source": ["for x,y in zip(aa,bb):\n  print(x,y)"]}}}], "inputVisible": false}]